{"version":3,"sources":["utils/ToText.js","utils/ShortenText.js","components/Blogs/PostCard.js","components/Blogs/Blog.js","pages/Blogs.js"],"names":["ToText","node","tag","document","createElement","innerHTML","innerText","ShortenText","text","startingPoint","maxLength","length","slice","styles","makeStyles","muiBaseTheme","grid","marginTop","minHeight","card","minWidth","marginLeft","marginRight","margin","transition","borderRadius","boxShadow","media","position","content","textAlign","padding","spacing","divider","heading","fontFamily","fontSize","fontWeight","color","subheading","lineHeight","avatar","width","height","bottom","StyledBadge","withStyles","theme","badge","display","backgroundColor","palette","background","paper","top","left","animation","border","transform","opacity","Badge","MediumCard","props","classes","splitMonth","pubDate","split","finalDate","Number","d","Date","Grid","xs","sm","lg","className","Card","CardMedia","image","thumbnail","getHours","overlap","anchorOrigin","vertical","horizontal","variant","style","alignItems","Avatar","alt","src","component","varient","href","profilelink","target","CardContent","paddingTop","paddingBottom","Typography","gutterBottom","Link","link","rel","underline","title","Divider","CardActions","paddingLeft","paddingRight","icon","faUser","author","faCalendarAlt","Blog","mediumURL","state","itemRows","profileLink","Axios","get","this","then","res","a","data","feed","posts","items","filter","item","categories","setState","forEach","i","row","Math","floor","push","container","map","key","Component","Blogs","Main","description"],"mappings":"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","file":"static/js/10.5238f53f.chunk.js","sourcesContent":["export default function ToText(node) {\n  const tag = document.createElement('div');\n  tag.innerHTML = node;\n  return tag.innerText;\n}\n","export default function ShortenText(text, startingPoint, maxLength) {\n  return text.length > maxLength\n    ? text.slice(startingPoint, maxLength)\n    : text;\n}\n","/* eslint-disable react/prop-types */\n/* eslint-disable import/extensions */\nimport React from 'react';\nimport { faUser, faCalendarAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  makeStyles,\n  Avatar,\n  Card,\n  CardMedia,\n  CardContent,\n  Typography,\n  Grid,\n  Badge,\n  withStyles,\n  Link,\n  CardActions,\n  Divider,\n} from '@material-ui/core';\nimport ToText from '../../utils/ToText';\nimport ShortenText from '../../utils/ShortenText';\n\nconst styles = makeStyles((muiBaseTheme) => ({\n  grid: {\n    marginTop: '20px',\n    minHeight: '391px',\n  },\n  card: {\n    minWidth: 0,\n    marginLeft: '15px',\n    marginRight: '15px',\n    margin: 'auto',\n    transition: '0.3s',\n    minHeight: '391px',\n    borderRadius: '.625rem!important',\n    boxShadow: '0 8px 40px -12px rgba(0,0,0,0.3)',\n    '&:hover': {\n      boxShadow: '0 16px 70px -12.125px rgba(0,0,0,0.3)',\n    },\n  },\n  media: {\n    minHeight: '10rem',\n    position: 'relative',\n  },\n  content: {\n    textAlign: 'left',\n    padding: muiBaseTheme.spacing(3),\n  },\n  divider: {\n    margin: `${muiBaseTheme.spacing(2)}px 0`,\n  },\n  heading: {\n    fontFamily: 'sans-serif',\n    fontSize: '16px',\n    fontWeight: 'bold',\n    color: '#3d5170',\n    '&::hover': {\n      color: '#2b394f',\n    },\n  },\n  subheading: {\n    fontFamily: ('Helvetica Neue', 'Helvetica', 'Arial', 'sans-serif'),\n    fontSize: '14px',\n    lineHeight: 1.8,\n  },\n  avatar: {\n    width: '3rem',\n    height: '3rem',\n    borderRadius: '50%',\n    bottom: -136,\n    boxShadow: ' 0 0 0 0.125rem #fff, 0 0.1875rem 0.4375rem rgba(90,97,105,.5)',\n    '&:not(:first-of-type)': {\n      marginLeft: -muiBaseTheme.spacing(),\n    },\n  },\n}));\n\nconst StyledBadge = withStyles((theme) => ({\n  badge: {\n    display: 'flex',\n    backgroundColor: '#44b700',\n    color: '#44b700',\n    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n    bottom: -131,\n\n    '&::after': {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      borderRadius: '50%',\n      animation: '$ripple 1.2s infinite ease-in-out',\n      border: '1px solid currentColor',\n      content: '\"\"',\n    },\n  },\n  '@keyframes ripple': {\n    '0%': {\n      transform: 'scale(.8)',\n      opacity: 1,\n    },\n    '100%': {\n      transform: 'scale(2.4)',\n      opacity: 0,\n    },\n  },\n}))(Badge);\n\nexport default function MediumCard(props) {\n  const classes = styles();\n  const monthShortname = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n  ];\n  // eslint-disable-next-line react/prop-types\n  const splitDate = props.pubDate.split(' ');\n  const date = splitDate[0];\n  const splitMonth = date.split('-');\n  const finalDate = `${monthShortname[Number(splitMonth[1] - 1)]\n  } ${\n    splitMonth[2]\n  },`\n    + ` ${\n      splitMonth[0]}`;\n  const d = new Date();\n\n  return (\n    <Grid xs={12} sm={12} lg={6} className={classes.grid}>\n      <Card className={classes.card}>\n        <CardMedia className={classes.media} image={props.thumbnail}>\n          {d.getHours() >= 5 && d.getHours() <= 22 ? (\n            <StyledBadge\n              overlap=\"circle\"\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'right',\n              }}\n              variant=\"dot\"\n              style={{\n                display: 'inline-block',\n                alignItems: 'center',\n                marginLeft: '1.5625rem',\n              }}\n            >\n              <Avatar\n                alt=\"anukool chaturvedi\"\n                className={classes.avatar}\n                src={props.avatar}\n                component=\"a\"\n                varient=\"rounded\"\n                href={props.profilelink}\n                target=\"_blank\"\n              />\n            </StyledBadge>\n          ) : (\n            <Avatar\n              alt=\"anukool chaturvedi\"\n              className={classes.avatar}\n              src={props.avatar}\n              component=\"a\"\n              style={{\n                display: 'inline-block',\n                alignItems: 'center',\n                marginLeft: '1.5625rem',\n              }}\n              varient=\"rounded\"\n              href={props.profilelink}\n              target=\"_blank\"\n            />\n          )}\n        </CardMedia>\n        <CardContent\n          className={classes.content}\n          style={{\n            paddingTop: '2.1875rem',\n            minHeight: '120px',\n            paddingBottom: '0',\n          }}\n        >\n          <Typography className={classes.heading} variant=\"h5\" gutterBottom>\n            <Link\n              href={props.link}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              underline=\"none\"\n            >\n              {ShortenText(props.title, 0, 75)}\n            </Link>\n          </Typography>\n          <Typography className={classes.subheading} variant=\"body1\">\n            {`${ShortenText(ToText(props.content), 0, 100)}...`}\n          </Typography>\n        </CardContent>\n        <Divider className={classes.divider} />\n        <CardActions\n          style={{\n            paddingLeft: '1.5625rem', paddingRight: '1.5625rem',\n          }}\n        >\n          <Grid>\n            <Typography\n              style={{\n                fontSize: '14px',\n                color: '#212529',\n              }}\n              display=\"block\"\n              variant=\"body1\"\n              gutterBottom\n            >\n              <FontAwesomeIcon icon={faUser} /> {props.author}\n            </Typography>\n          </Grid>\n          <Grid>\n            <Typography\n              display=\"block\"\n              variant=\"body1\"\n              style={{\n                fontSize: '14px',\n                color: '#868e96',\n              }}\n              gutterBottom\n            >\n              <FontAwesomeIcon icon={faCalendarAlt} /> {finalDate}\n            </Typography>\n          </Grid>\n        </CardActions>\n      </Card>\n    </Grid>\n  );\n}\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable max-len */\nimport React, { Component } from 'react';\nimport { Grid } from '@material-ui/core';\nimport Axios from 'axios';\nimport PostCard from './PostCard';\n// import ShowBlog from './ShowBlog';\n// import Spinner from '../Spinner/Spinner';\n\nexport class Blog extends Component {\n  // eslint-disable-next-line react/sort-comp\n  constructor(props) {\n    super(props);\n\n    this.state = { itemRows: [], avatar: '', profileLink: '' };\n  }\n\n  mediumURL =\n    'https://api.rss2json.com/v1/api.json?rss_url=https://medium.com/feed/@chaturvedianukool';\n\n  async componentDidMount() {\n    await Axios\n      .get(this.mediumURL)\n      .then(async (res) => res.data)\n      .then((data) => {\n        // console.log(data.data)\n        const avatar = data.feed.image;\n        const profileLink = data.feed.link;\n        const res = data.items; // This is an array with the content. No feed, no info about author etc..\n        const posts = res.filter((item) => item.categories.length > 0);\n        // // const avatar = data.data.feed.image;\n        // // const profileLink = data.data.feed.link;\n        // // // eslint-disable-next-line max-len\n        // // const res = data.data.items; // This is an array with the content. No feed, no info about author etc..\n        // // const posts = res.filter((item) => item.categories.length > 0);\n\n        // const { title } = data.data.feed;\n\n        this.setState({ avatar, profileLink });\n        const itemRows = [];\n        posts.forEach((item, i) => {\n          // eslint-disable-next-line no-param-reassign\n          item.avatar = this.state.avatar; // push avatar inside the json\n          // eslint-disable-next-line no-param-reassign\n          item.profilelink = this.state.profileLink; // push profile link inside the JSON\n          const row = Math.floor(i / 3);\n          if (!itemRows[row]) itemRows[row] = [];\n          itemRows[row].push(item);\n        });\n\n        // eslint-disable-next-line react/no-unused-state\n        this.setState({ itemRows });\n      });\n  }\n\n  render() {\n    const { itemRows } = this.state;\n\n    return (\n      <Grid container spacing={1}>\n        {itemRows.map((row) => row.map((item, key) => <PostCard {...item} key={key} />))}\n      </Grid>\n    );\n  }\n}\n\nexport default Blog;\n","import React from 'react';\nimport Main from '../layouts/Main';\nimport Blog from '../components/Blogs/Blog';\n\nconst Blogs = () => (\n  <Main title=\"Blogs\" description=\"Blog posts created by Anukool\">\n    <Blog />\n  </Main>\n);\n\nexport default Blogs;\n"],"sourceRoot":""}